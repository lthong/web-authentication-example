{"version":3,"sources":["reducers/auth.js","reducers/index.js","constants/auth.js","actions/auth.js","components/Header/Header.js","components/Header/index.js","components/Home/Home.js","components/Home/index.js","components/UserForm/UserForm.js","components/UserForm/index.js","components/Login/index.js","components/Login/Login.js","components/Signup/index.js","components/Signup/Signup.js","components/App.js","index.js"],"names":["initState","token","authErrMsg","userGreeting","combineReducers","auth","state","action","type","payload","saveToken","response","data","dispatch","cb","localStorage","setItem","resetAuthErrMsg","connect","logout","removeItem","history","useHistory","onLogout","useCallback","push","className","exact","to","activeClassName","onClick","Header","getUserGreetings","getState","axios","get","headers","authorization","then","useEffect","Home","title","formType","onSubmit","useState","email","password","formData","setFormData","customContent","useMemo","onFormDataChange","target","key","id","value","prevState","onFormSubmit","e","preventDefault","htmlFor","onChange","required","UserForm","Login","signin","post","catch","onLogin","Signup","signup","error","onSignup","location","useLocation","isForDemo","search","querystring","parse","substr","isLogin","path","component","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","getItem","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.a0b9fafe.chunk.js","sourcesContent":["import * as cons from 'constants/auth';\n\nconst initState = {\n  token: '',\n  authErrMsg: '',\n  userGreeting: '',\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case cons.UPDATE_TOKEN:\n      return {\n        ...state,\n        token: action.token,\n      };\n\n    case cons.UPDATE_USER_AUTH_ERR_MSG:\n      return {\n        ...state,\n        authErrMsg: action.authErrMsg,\n      };\n\n    case cons.RESET_USER_AUTH_ERR_MSG:\n      return {\n        ...state,\n        authErrMsg: initState.authErrMsg,\n      };\n\n    case cons.GET_USER_GREETINGS:\n      return {\n        ...state,\n        userGreeting: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({ auth });\n","export const UPDATE_TOKEN = 'auth/update_token';\nexport const UPDATE_USER_AUTH_ERR_MSG = 'auth/update_user_auth_err_msg';\nexport const RESET_USER_AUTH_ERR_MSG = 'auth/reset_user_auth_err_msg';\nexport const GET_USER_GREETINGS = 'auth/get_user_greetings';\n","import axios from 'axios';\nimport * as cons from 'constants/auth';\n\nconst saveToken = ({\n  response: {\n    data: { token },\n  },\n  dispatch,\n  cb = () => {},\n}) => {\n  localStorage.setItem('token', token);\n  dispatch({ type: cons.UPDATE_TOKEN, token });\n  cb();\n};\n\nexport const signup = ({ formData, cb }) => (dispatch) => {\n  axios\n    .post('http://localhost:3090/signup', formData)\n    .then((response) => {\n      saveToken({ response, dispatch, cb });\n    })\n    .catch((e) => {\n      const { error: authErrMsg } = e.response.data;\n      dispatch({\n        type: cons.UPDATE_USER_AUTH_ERR_MSG,\n        authErrMsg,\n      });\n    });\n};\n\nexport const signin = ({ formData, cb }) => (dispatch) => {\n  axios\n    .post('http://localhost:3090/signin', formData)\n    .then((response) => {\n      saveToken({ response, dispatch, cb });\n    })\n    .catch(() => {\n      dispatch({\n        type: cons.UPDATE_USER_AUTH_ERR_MSG,\n        authErrMsg: 'Invalid login credentials',\n      });\n    });\n};\n\nexport const resetAuthErrMsg = () => {\n  return {\n    type: cons.RESET_USER_AUTH_ERR_MSG,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  return {\n    type: cons.UPDATE_TOKEN,\n    token: '',\n  };\n};\n\nexport const getUserGreetings = () => (dispatch, getState) => {\n  const token = getState().auth.token;\n  axios\n    .get('http://localhost:3090/', { headers: { authorization: token } })\n    .then((response) => {\n      dispatch({ type: cons.GET_USER_GREETINGS, payload: response.data });\n    });\n};\n","import React, { useCallback } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from 'actions/auth';\n\nconst Header = ({ logout }) => {\n  const history = useHistory();\n  const onLogout = useCallback(() => {\n    logout();\n    history.push('/login');\n  }, [logout, history]);\n\n  return (\n    <div className='header'>\n      <NavLink exact to='/' activeClassName='active'>\n        Home\n      </NavLink>\n      <div className='right-navs'>\n        <div className='logout' onClick={onLogout}>\n          Logout\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, {\n  logout,\n})(Header);\n","import Header from './Header';\nimport './style.scss';\n\nexport default Header;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Header from 'components/Header';\nimport { getUserGreetings } from 'actions/auth';\n\nconst Home = ({ getUserGreetings, token, userGreeting }) => {\n  useEffect(() => {\n    token && getUserGreetings();\n  });\n\n  return (\n    <div className='home'>\n      <Header />\n      <div className='content'>{userGreeting || 'Hello React!'}</div>\n    </div>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    token: state.auth.token,\n    userGreeting: state.auth.userGreeting,\n  }),\n  {\n    getUserGreetings,\n  }\n)(Home);\n","import Home from './Home';\nimport './style.scss';\n\nexport default Home;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst UserForm = ({\n  className = '',\n  title = 'Welcome',\n  formType,\n  onSubmit,\n  authErrMsg,\n}) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const customContent = useMemo(\n    () =>\n      formType === 'login' && (\n        <div className='links'>\n          <Link to='/signup'>Signup</Link>\n          <span className='partition'>|</span>\n          <Link to='/?isForDemo=true'>Skip</Link>\n        </div>\n      ),\n    [formType]\n  );\n\n  const onFormDataChange = useCallback(({ target: { id: key, value } }) => {\n    setFormData((prevState) => ({ ...prevState, [key]: value }));\n  }, []);\n\n  const onFormSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      onSubmit(formData);\n    },\n    [onSubmit, formData]\n  );\n\n  return (\n    <div className={`user-form ${className}`}>\n      <form onSubmit={onFormSubmit}>\n        <div className='title'>{title}</div>\n        <label htmlFor='email'>Email</label>\n        <input\n          id='email'\n          type='email'\n          value={formData.email}\n          onChange={onFormDataChange}\n          required\n        />\n        <label htmlFor='password'>Password</label>\n        <input\n          id='password'\n          type='password'\n          value={formData.password}\n          onChange={onFormDataChange}\n          required\n        />\n        <div className='err'>{authErrMsg}</div>\n        <button type='submit'>Submit</button>\n        {customContent}\n      </form>\n    </div>\n  );\n};\n\nexport default connect((state) => ({\n  authErrMsg: state.auth.authErrMsg,\n}))(UserForm);\n","import UserForm from './UserForm';\nimport './style.scss';\n\nexport default UserForm;\n","import Login from './Login';\n\nexport default Login;\n","import React, { useCallback, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport UserForm from 'components/UserForm';\nimport { signin, resetAuthErrMsg } from 'actions/auth';\n\nconst Login = ({ signin, resetAuthErrMsg }) => {\n  const history = useHistory();\n  const onLogin = useCallback(\n    (formData) => {\n      signin({\n        formData,\n        cb: () => {\n          history.push('/');\n        },\n      });\n    },\n    [history, signin]\n  );\n\n  useEffect(() => {\n    return () => {\n      resetAuthErrMsg();\n    };\n  });\n\n  return <UserForm formType='login' onSubmit={onLogin} />;\n};\n\nexport default connect(null, {\n  signin,\n  resetAuthErrMsg,\n})(Login);\n","import Signup from './Signup';\n\nexport default Signup;\n","import React, { useCallback, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport UserForm from 'components/UserForm';\nimport { signup, resetAuthErrMsg } from 'actions/auth';\n\nconst Signup = ({ signup, resetAuthErrMsg }) => {\n  const history = useHistory();\n  const onSignup = useCallback(\n    (formData) => {\n      signup({\n        formData,\n        cb: () => {\n          history.push('/');\n        },\n      });\n    },\n    [history, signup]\n  );\n\n  useEffect(() => {\n    return () => {\n      resetAuthErrMsg();\n    };\n  });\n\n  return <UserForm title='Signup' formType='signup' onSubmit={onSignup} />;\n};\n\nexport default connect(null, {\n  signup,\n  resetAuthErrMsg,\n})(Signup);\n","import React, { useMemo } from 'react';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport querystring from 'querystring';\nimport Home from 'components/Home';\nimport Login from 'components/Login';\nimport Signup from 'components/Signup';\nimport 'stylesheets/app.scss';\n\nconst App = ({ token }) => {\n  const location = useLocation();\n  const isForDemo = useMemo(\n    () =>\n      location.search && querystring.parse(location.search.substr(1)).isForDemo,\n    [location]\n  );\n  const isLogin = useMemo(() => !!token || isForDemo, [token, isForDemo]);\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/'>\n          {isLogin ? <Home /> : <Redirect to='/login' />}\n        </Route>\n        <Route path='/login' component={Login} />\n        <Route path='/signup' component={Signup} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default connect((state) => ({\n  token: state.auth.token,\n}))(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from 'reducers';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from 'components/App';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  {\n    auth: { token: localStorage.getItem('token') || null },\n  },\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}